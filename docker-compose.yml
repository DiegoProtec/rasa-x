version: '3.4'

x-geral: &geral
  PROFILE: "dev"
  DEBUG_MODE: "true"
  RASA_X_PASSWORD: "teste"

x-rasa-envs: &rasa-envs
  <<: *geral
  RASA_TOKEN: "${RASA_TOKEN}"
  RASA_X_TOKEN: "${RASA_X_TOKEN}"
  RASA_WORKER_TOKEN: "${RASA_WORKER_TOKEN}"
  JWT_SECRET: "${JWT_SECRET}"
  PASSWORD_SALT: "${PASSWORD_SALT}"
  RABBITMQ_HOST: "vm"
  RABBITMQ_USERNAME: "user"
  RABBITMQ_PASSWORD: "${RABBITMQ_PASSWORD}"
  DB_DIALECT: "postgresql"
  DB_HOST: "vm"
  DB_PORT: "5432"
  DB_USER: "admin"
  DB_PASSWORD: "${DB_PASSWORD}"
  REDIS_HOST: "vm"
  REDIS_PORT: "6379"
  REDIS_PASSWORD: "${REDIS_PASSWORD}"
  REDIS_DB: "1"

x-rasa_x-credentials: &rasa_x-credentials
  <<: *rasa-envs
  LOCAL_MODE: "false"
  RASA_MODEL_DIR: "/app/models"
  RASA_X_USER_ANALYTICS: "0"
  SANIC_RESPONSE_TIMEOUT: "3600"
  METRICS_CONSENT: "${METRICS_CONSENT}"
  SELF_PORT: "5002"
  UUID: "${UUID:-''}"
  RASA_PRODUCTION_HOST: "http://rasa-production:5005"
  RASA_WORKER_HOST: "http://rasa-worker:5005"

x-rasa-credentials: &rasa-credentials
  <<: *rasa-envs
  RASA_X_HOST: "http://rasa-x:5002"
  RASA_USER_APP: "http://app:5055"
  RASA_MODEL_SERVER: "http://rasa-x:5002/api/projects/default/models/tags/production"
  RASA_MODEL_PULL_INTERVAL: 10

x-rasa-services: &default-rasa-service
  restart: always
  extra_hosts:
    - vm:0.0.0.0
  image: chatbot-rasa
  expose:
    - 5005
  volumes:
    - ./:/app
  command: >
    x
    --no-prompt
    --production
    --config-endpoint http://rasa-x:5002/api/config?token=${RASA_X_TOKEN}
    --port 5005
    --jwt-method HS256
    --jwt-secret ${JWT_SECRET}
    --auth-token '${RASA_TOKEN}'
    --enable-api
    --cors "*"
    --debug
  depends_on:
    - rasa-x
    - redis

services:
  rasa-x:
    restart: always
    extra_hosts:
      - vm:0.0.0.0
    image: rasa/rasa-x:${RASA_X_VERSION}
    expose:
      - 5002
    volumes:
      - ./models:/app/models
      - ./environments.yml:/app/environments.yml
      - ./credentials.yml:/app/credentials.yml
      - ./endpoints.yml:/app/endpoints.yml
      - ./logs:/logs
      - ./auth:/app/auth
    environment:
      <<: *rasa_x-credentials
      RABBITMQ_QUEUE: "rasa-production-events"
      DB_DATABASE: "rasa"
  rasa-production:
    <<: *default-rasa-service
    environment:
      <<: *rasa-credentials
      RASA_ENVIRONMENT: "production"
      RABBITMQ_QUEUE: "rasa-production-events"
      DB_DATABASE: "tracker"
  rasa-worker:
    <<: *default-rasa-service
    environment:
      <<: *rasa-credentials
      RASA_ENVIRONMENT: "worker"
      RABBITMQ_QUEUE: "rasa-worker-events"
      DB_DATABASE: "worker_tracker"
  app:
    restart: always
    image: chatbot-app
    expose:
      - 5055
    volumes:
      - ./actions:/app/actions
      - ./services:/app/services
      - ./utils:/app/utils
    environment:
      <<: *geral
    command: >
      start
      --actions actions
      --cors "*"
      --debug
    depends_on:
      - rasa-production
  nginx:
    restart: always
    image: rasa/nginx:${RASA_X_VERSION}
    ports:
      - 80:8080
      - 443:8443
    volumes:
      - ./certs:/opt/bitnami/certs
      - ./terms:/opt/bitnami/nginx/conf/bitnami/terms
    depends_on:
      - rasa-x
      - rasa-production
      - app
  logger:
    restart: always
    image: rasa/logger:${RASA_X_VERSION}
    command: ["/bin/sh", "-c", "docker-compose logs --no-color -f > /logs/compose_`date '+%Y-%m-%d_%H:%M:%S'`.log"]
    volumes:
      - ./logs:/logs
      - ./.env/:/etc/rasa/.env
      - ./docker-compose.yml:/etc/rasa/docker-compose.yml
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /etc/rasa
    depends_on:
      - nginx
  redis:
    restart: always
    image: bitnami/redis:5.0.5
    ports:
      - 6379:6379
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"